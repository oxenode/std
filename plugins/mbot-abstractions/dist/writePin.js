var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};e.d(t,{VG:()=>i,xz:()=>s,ZP:()=>a,Tt:()=>d});const n=window.OxenodeCore,r=window.OxenodeUi,o=window.jsxRuntimeExports;var i="Write Pin";function a(e){var t=e.nodeId;return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h3",{children:"Write Pin"}),(0,o.jsx)("span",{className:"xsmall",children:"Write digital state to pins"}),(0,o.jsx)(r.NumberInput,{nodeId:t,name:"gpioPin",value:"12"}),(0,o.jsxs)(r.Select,{nodeId:t,name:"mode",value:"1",children:[(0,o.jsx)("option",{value:"1",children:"HIGH"}),(0,o.jsx)("option",{value:"0",children:"LOW"})]})]})}function s(e){var t=e.controller,n=e.inputs.socket,r=e.state,o=r.mode,i=r.gpioPin,a=new Uint8Array([128,i,1&+o]);console.log(a),n.send(a);var s=new Promise((function(e){n.onmessage=function(t){e(t)}}));return t.setCache("data",s),t.trigger(0)}var d=[n.port.input().type("trigger"),n.port.input().type("data").label("socket"),n.port.output().type("trigger")],l=t.VG,p=t.xz,c=t.ZP,u=t.Tt;export{l as Name,p as Trigger,c as default,u as ports};
var t={d:(r,e)=>{for(var o in e)t.o(e,o)&&!t.o(r,o)&&Object.defineProperty(r,o,{enumerable:!0,get:e[o]})},o:(t,r)=>Object.prototype.hasOwnProperty.call(t,r)},r={};t.d(r,{VG:()=>n,ZP:()=>u,Tt:()=>a});const e=window.OxenodeCore,o=window.jsxRuntimeExports;var n="toNumber";function u(t){return function(t){if(null==t)throw new TypeError("Cannot destructure "+t)}(t),(0,o.jsx)("h3",{children:"toNumber"})}var a=[e.port.input().type(["string","boolean"]),e.port.output().type("number").onFetch((function(t){var r=t.inputs;return Number(r[0])}))],p=r.VG,i=r.ZP,s=r.Tt;export{p as Name,i as default,s as ports};
var t={d:(e,r)=>{for(var n in r)t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},e={};t.d(e,{VG:()=>o,ZP:()=>p,Tt:()=>u});const r=window.OxenodeCore,n=window.jsxRuntimeExports;var o="subtract number";function p(){return(0,n.jsx)("h1",{children:"-"})}var u=[r.port.input().type("number").label("A"),r.port.input().type("number").label("B"),r.port.output().type("number").onFetch((function(t){var e=t.inputs;return e.A-e.B}))],a=e.VG,i=e.ZP,s=e.Tt;export{a as Name,i as default,s as ports};
var r={d:(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o:(r,t)=>Object.prototype.hasOwnProperty.call(r,t)},t={};r.d(t,{QV:()=>i,Gq:()=>o,cp:()=>a,gX:()=>p,If:()=>s});const e=window.OxenodeCore,n=window.jsxRuntimeExports;var o=!0,i="Print";function a(r){return function(r){if(null==r)throw new TypeError("Cannot destructure "+r)}(r),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h1",{children:"Print"}),(0,n.jsx)("span",{children:"x86_64 write syscall"})]})}var s=[e.port.input().type("trigger"),e.port.input().type("string").label("buffer"),e.port.output().type("trigger")],p={x86_64:function(r){var t=r.$,e=r.inputs.buffer;return[t("mov","rax","1"),t("mov","rdi","1"),t("mov","rsi",e),t("mov","rdx",e+"_len"),t("syscall")]}},u=t.QV,c=t.Gq,l=t.cp,d=t.gX,f=t.If;export{u as Name,c as Static,l as default,d as extern,f as ports};
var e={d:(t,r)=>{for(var o in r)e.o(r,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:r[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};e.d(t,{QV:()=>a,Gq:()=>n,cp:()=>p,gX:()=>d,If:()=>u});const r=window.OxenodeCore,o=window.jsxRuntimeExports;var n=!0,a="if";function p(e){return function(e){if(null==e)throw new TypeError("Cannot destructure "+e)}(e),(0,o.jsx)("h1",{children:"if"})}var u=[r.port.input().type("trigger"),r.port.output().type("trigger").label("true"),r.port.output().type("trigger").label("false")],d={x86_64:function(e){var t=e.$,r=e.node,o=e.edges;return[t("cmp","rax","rbx"),"je .".concat(o[r.ports.find((function(e){return"true"===e.label})).edgeIds[0]].to.nodeId),"jmp .".concat(o[r.ports.find((function(e){return"false"===e.label})).edgeIds[0]].to.nodeId)]}},i=t.QV,c=t.Gq,s=t.cp,f=t.gX,l=t.If;export{i as Name,c as Static,s as default,f as extern,l as ports};
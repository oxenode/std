var t={d:(r,e)=>{for(var n in e)t.o(e,n)&&!t.o(r,n)&&Object.defineProperty(r,n,{enumerable:!0,get:e[n]})},o:(t,r)=>Object.prototype.hasOwnProperty.call(t,r)},r={};t.d(r,{QV:()=>u,Gq:()=>o,cp:()=>a,gX:()=>i,If:()=>p});const e=window.OxenodeCore,n=window.jsxRuntimeExports;var o=!0,u="Add";function a(t){return function(t){if(null==t)throw new TypeError("Cannot destructure "+t)}(t),(0,n.jsx)("h1",{children:"Add"})}var p=[e.port.input().type("trigger"),e.port.input().type("number").label("a"),e.port.input().type("number").label("b"),e.port.output().type("trigger"),e.port.output().type("number").label("result")],i={x86_64:function(t){var r=t.$,e=t.inputs,n=e.a,o=e.b,u=t.outputs.result;return[r("mov","rax",[n]),r("add","rax",[o]),u?r("mov",[u],"rax"):"; unused result, can be found in `rax`"]}},s=r.QV,d=r.Gq,l=r.cp,c=r.gX,b=r.If;export{s as Name,d as Static,l as default,c as extern,b as ports};
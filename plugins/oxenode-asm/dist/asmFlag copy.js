var t={d:(r,e)=>{for(var n in e)t.o(e,n)&&!t.o(r,n)&&Object.defineProperty(r,n,{enumerable:!0,get:e[n]})},o:(t,r)=>Object.prototype.hasOwnProperty.call(t,r)},r={};t.d(r,{QV:()=>o,cp:()=>a,gX:()=>u,If:()=>p});const e=window.OxenodeCore,n=window.jsxRuntimeExports;var o="asmFlag";function a(t){return function(t){if(null==t)throw new TypeError("Cannot destructure "+t)}(t),(0,n.jsx)("h1",{children:"Push"})}var p=[e.port.input().type("trigger"),e.port.input().type("number").label("a"),e.port.input().type("number").label("b"),e.port.output().type("trigger")],u={asm:function(t){var r=t.a,e=t.b;return["push ".concat(r),"push ".concat(e)]}},s=r.QV,c=r.cp,i=r.gX,l=r.If;export{s as Name,c as default,i as extern,l as ports};
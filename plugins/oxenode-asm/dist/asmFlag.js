var t={d:(r,e)=>{for(var n in e)t.o(e,n)&&!t.o(r,n)&&Object.defineProperty(r,n,{enumerable:!0,get:e[n]})},o:(t,r)=>Object.prototype.hasOwnProperty.call(t,r)},r={};t.d(r,{QV:()=>o,cp:()=>p,gX:()=>a,If:()=>u});const e=window.OxenodeCore,n=window.jsxRuntimeExports;var o="Push";function p(t){return function(t){if(null==t)throw new TypeError("Cannot destructure "+t)}(t),(0,n.jsx)("h1",{children:"Push"})}var u=[e.port.input().type("trigger"),e.port.input().type("number").label("a"),e.port.input().type("number").label("b"),e.port.output().type("trigger")],a={asm:function(t){var r=t.inputs,e=r.a,n=r.b;return["push ".concat(e),"push ".concat(n)]}},s=r.QV,i=r.cp,c=r.gX,l=r.If;export{s as Name,i as default,c as extern,l as ports};
var t={d:(r,e)=>{for(var n in e)t.o(e,n)&&!t.o(r,n)&&Object.defineProperty(r,n,{enumerable:!0,get:e[n]})},o:(t,r)=>Object.prototype.hasOwnProperty.call(t,r)},r={};t.d(r,{VG:()=>u,xz:()=>c,ZP:()=>s,Tt:()=>p});const e=window.OxenodeCore,n=window.jsxRuntimeExports;function o(t){return function(t){if(Array.isArray(t))return t}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,r){if(!t)return;if("string"==typeof t)return a(t,r);var e=Object.prototype.toString.call(t).slice(8,-1);"Object"===e&&t.constructor&&(e=t.constructor.name);if("Map"===e||"Set"===e)return Array.from(t);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return a(t,r)}(t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}function i(t,r,e,n,o,a,i){try{var u=t[a](i),s=u.value}catch(t){return void e(t)}u.done?r(s):Promise.resolve(s).then(n,o)}var u="Websocket Send";function s(){return(0,n.jsx)(n.Fragment,{children:(0,n.jsx)("h3",{children:"Websocket Send"})})}function c(t){return l.apply(this,arguments)}function l(){var t;return t=function*(t){var r=t.inputs,e=r.socket,n=r.data,a=t.controller;n.length<2&&console.log("Please provide a byte string\n Example:   81 A2 BE\n");var i=o(n.split(" ")),u=i[0],s=i.slice(1);u=parseInt(u.slice(0,2),16)||0,s||(s=[]);var c=new Promise((function(t){e.onmessage=function(r){t(r)}})),l=new Uint8Array([255&u,255&s[0]||0,255&s[1]||0]);return e.send(l),a.setCache("data",c),a.trigger(0)},l=function(){var r=this,e=arguments;return new Promise((function(n,o){var a=t.apply(r,e);function u(t){i(a,n,o,u,s,"next",t)}function s(t){i(a,n,o,u,s,"throw",t)}u(void 0)}))},l.apply(this,arguments)}var p=[e.port.input().type("trigger"),e.port.input().type("data").label("socket"),e.port.input().type("string").label("data"),e.port.output().type("trigger")],f=r.VG,d=r.xz,y=r.ZP,g=r.Tt;export{f as Name,d as Trigger,y as default,g as ports};